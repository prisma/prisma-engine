pub const RESERVED_MODEL_NAMES: [&str; 108] = [
    // reserved GraphQL words
    "Query",
    "Mutation",
    "Subscription",
    // Misc
    "dmmf",
    "PromiseType",
    "PromiseReturnType",
    "Enumerable",
    "MergeTruthyValues",
    "CleanupNever",
    "Subset",
    "AtLeastOne",
    "atMostOne",
    "OnlyOne",
    "StringFilter",
    "IDFilter",
    "FloatFilter",
    "IntFilter",
    "BooleanFilter",
    "DateTimeFilter",
    "NullableStringFilter",
    "NullableIDFilter",
    "NullableFloatFilter",
    "NullableIntFilter",
    "NullableBooleanFilter",
    "NullableDateTimeFilter",
    "PrismaClientFetcher",
    "PrismaClient",
    "Engine",
    "BatchPayload",
    "Datasources",
    "ErrorFormat",
    "Hooks",
    "LogLevel",
    "LogDefinition",
    "GetLogType",
    "GetEvents",
    "QueryEvent",
    "LogEvent",
    "ModelDelegate",
    "QueryDelegate",
    "missingArg",
    "ArgError",
    "InvalidFieldError",
    "InvalidFieldNameError",
    "InvalidFieldTypeError",
    "EmptySelectError",
    "NoTrueSelectError",
    "IncludeAndSelectError",
    "EmptyIncludeError",
    "InvalidArgError",
    "InvalidArgNameError",
    "MissingArgError",
    "InvalidArgTypeError",
    "AtLeastOneError",
    "AtMostOneError",
    "PrismaClientRequestError",
    "PrismaClientOptions",
    "PrismaClientKnownRequestError",
    "PrismaClientUnknownRequestError",
    "PrismaClientInitializationError",
    "PrismaClientRustPanicError",
    "PrismaVersion",
    // JavaScript keywords
    "await",
    "async",
    "break",
    "case",
    "catch",
    "class",
    "const",
    "continue",
    "debugger",
    "default",
    "delete",
    "do",
    "else",
    "enum",
    "export",
    "extends",
    "false",
    "finally",
    "for",
    "function",
    "if",
    "implements",
    "import",
    "in",
    "instanceof",
    "interface",
    "let",
    "new",
    "null",
    "package",
    "private",
    "protected",
    "public",
    "return",
    "super",
    "switch",
    "this",
    "throw",
    "true",
    "try",
    "typeof",
    "var",
    "void",
    "while",
    "with",
    "yield",
];
