name: Query Engine
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  scala-vitess-tests:
    name: "Scala test suite: ${{ matrix.database.name }} on Linux"
    runs-on: [self-hosted, linux, buildjet]

    strategy:
      fail-fast: false
      matrix:
        database:
          - connector: "vitess_5_7"
            docker: "vitess-test-5_7 vitess-shadow-5_7"
            name: "Vitess on MySQL 5.7"
          - connector: "vitess_8_0"
            docker: "vitess-test-8_0 vitess-shadow-8_0"
            name: "Vitess on MySQL 8.0"
          - connector: "sqlite"
            name: "SQLite"
          - connector: "postgres9"
            docker: "postgres9"
            name: "PostgreSQL 9"
          - connector: "postgres10"
            docker: "postgres10"
            name: "PostgreSQL 10"
          - connector: "postgres11"
            docker: "postgres11"
            name: "PostgreSQL 11"
          - connector: "postgres12"
            docker: "postgres12"
            name: "PostgreSQL 12"
          - connector: "postgres13"
            docker: "postgres13"
            name: "PostgreSQL 13"
          - connector: "mysql56"
            docker: "mysql-5-6"
            name: "MySQL 5.6"
          - connector: "mysql"
            docker: "mysql-5-7"
            name: "MySQL 5.7"
          - connector: "mysql8"
            docker: "mysql-8-0"
            name: "MySQL 8.0"
          - connector: "mariadb"
            docker: "mariadb-10-0"
            name: "MariaDB 10.0"
          - connector: "mssql2017"
            docker: "mssql-2017"
            name: "Microsoft SQL Server 2017"
          - connector: "mssql2019"
            docker: "mssql-2019"
            name: "Microsoft SQL Server 2019"

    env:
      TEST_CONNECTOR: ${{ matrix.database.connector }}
      LOG_LEVEL: "info"
      LOG_QUERIES: "y"
      RUST_LOG_FORMAT: "devel"
      RUST_BACKTRACE: 1
      CLICOLOR_FORCE: 1

    steps:
      - uses: actions/checkout@v2

      - name: "Start ${{ matrix.database }}"
        run: docker-compose -f docker-compose.yml up -d --remove-orphans ${{ matrix.database.docker }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.8

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: query-engine-${{ runner.os }}-${{ matrix.database.connector }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: export SERVER_ROOT=$(pwd) && cd query-engine/connector-test-kit && sbt test
        name: Run tests
        env:
          CLICOLOR_FORCE: 1

  rust-vitess-tests:
    name: "Rust test suite: ${{ matrix.database }} on Linux"

    strategy:
      fail-fast: false
      matrix:
        database:
          - "sqlite"
          - "postgres9"
          - "postgres10"
          - "postgres11"
          - "postgres12"
          - "postgres13"
          - "mysql_5_6"
          - "mysql_5_7"
          - "mysql_8"
          - "mysql_mariadb"
          - "mssql_2017"
          - "mssql_2019"
          - "mongodb"
          - "vitess_5_7"
          - "vitess_8_0"

    env:
      LOG_LEVEL: "info"
      LOG_QUERIES: "y"
      RUST_LOG_FORMAT: "devel"
      RUST_BACKTRACE: 1
      CLICOLOR_FORCE: 1

    runs-on: [self-hosted, linux, buildjet]
    steps:
      - uses: actions/checkout@v2

      - name: "Start ${{ matrix.database }}"
        run: make dev-${{ matrix.database }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: query-engine-rust-${{ runner.os }}-cargo-vitess-${{ matrix.version }}-${{ hashFiles('**/Cargo.lock') }}

      - run: export WORKSPACE_ROOT=$(pwd) && cargo test --package query-engine-tests -- --test-threads=1
        env:
          CLICOLOR_FORCE: 1
