name: Migration Engine
on:
  push:

jobs:


  test:
    name: "Test Migration Engine - vttestserver"

    services:
      vttestserver57:
        image: vitess/vttestserver:mysql57
        ports:
          - 33577:33577
        env:
          PORT: 33574
          KEYSPACES: apply_migrations_with_an_empty_migrations_folder_works,applying_a_single_migration_should_work,applying_two_migrations_works,migrations_should_fail_when_the_script_is_invalid,migrations_should_not_reapply_modified_migrations,migrations_should_fail_on_an_uninitialized_nonempty_database,migrations_should_succeed_on_an_uninitialized_nonempty_database_with_postgis_tables,basic_create_migration_works,creating_a_second_migration_should_have_the_previous_sql_schema_as_baseline,bad_migrations_should_make_the_command_fail_with_a_good_error,empty_migrations_should_not_be_created,migration_name_length_is_validated,empty_migrations_should_be_created_with_the_draft_option,creating_a_migration_with_a_non_existent_migrations_directory_should_work,create_enum_step_only_rendered_when_needed,create_enum_renders_correctly,unsupported_type_renders_correctly,no_additional_unique_created,diagnose_migrations_history_on_an_empty_database_without_migration_returns_nothing,diagnose_migrations_history_after_two_migrations_happy_path,diagnose_migration_history_with_opt_in_to_shadow_database_calculates_drift,diagnose_migration_history_without_opt_in_to_shadow_database_does_not_calculate_drift,diagnose_migration_history_calculates_drift_in_presence_of_failed_migrations,diagnose_migrations_history_can_detect_when_the_database_is_behind,diagnose_migrations_history_can_detect_when_the_folder_is_behind,diagnose_migrations_history_can_detect_when_history_diverges,diagnose_migrations_history_can_detect_edited_migrations,diagnose_migrations_history_reports_migrations_failing_to_apply_cleanly,diagnose_migrations_history_with_a_nonexistent_migrations_directory_works,with_a_failed_migration,with_an_invalid_unapplied_migration_should_report_it,drift_can_be_detected_without_migrations_table,shadow_database_creation_error_is_special_cased_mysql,shadow_database_creation_error_is_special_cased_postgres,shadow_database_creation_error_is_special_cased_mssql,empty_migration_directories_should_cause_known_errors,authentication_failure_must_return_a_known_error_on_postgres,authentication_failure_must_return_a_known_error_on_mysql,unreachable_database_must_return_a_proper_error_on_mysql,unreachable_database_must_return_a_proper_error_on_postgres,database_does_not_exist_must_return_a_proper_error,database_access_denied_must_return_a_proper_error_in_rpc,bad_datasource_url_and_provider_combinations_must_return_a_proper_error,connections_to_system_databases_must_be_rejected,datamodel_parser_errors_must_return_a_known_error,unique_constraint_errors_in_migrations_must_return_a_known_error,json_fields_must_be_rejected,connection_string_problems_give_a_nice_error,evaluate_data_loss_with_an_up_to_date_database_returns_no_step,evaluate_data_loss_with_up_to_date_db_and_pending_changes_returns_steps,evaluate_data_loss_with_not_up_to_date_db_and_pending_changes_returns_the_right_steps,evaluate_data_loss_with_past_unapplied_migrations_with_destructive_changes_does_not_warn_for_these,evaluate_data_loss_returns_warnings_for_the_local_database_for_the_next_migration,evaluate_data_loss_maps_warnings_to_the_right_steps,dropping_a_table_with_rows_should_warn,dropping_a_column_with_non_null_values_should_warn,altering_a_column_without_non_null_values_should_not_warn,altering_a_column_with_non_null_values_should_warn,column_defaults_can_safely_be_changed,changing_a_column_from_required_to_optional_should_work,changing_a_column_from_optional_to_required_is_unexecutable,dropping_a_table_referenced_by_foreign_keys_must_work,string_columns_do_not_get_arbitrarily_migrated,altering_the_type_of_a_column_in_an_empty_table_should_not_warn,making_a_column_required_in_an_empty_table_should_not_warn,enum_variants_can_be_added_without_data_loss,enum_variants_can_be_dropped_without_data_loss,set_default_current_timestamp_on_existing_column_works,primary_key_migrations_do_not_cause_data_loss,failing_enum_migrations_should_not_be_partially_applied,adding_a_required_field_to_an_existing_table_with_data_without_a_default_is_unexecutable,adding_a_required_field_with_prisma_level_default_works,adding_a_required_field_with_a_default_to_an_existing_table_works,adding_a_required_field_without_default_to_an_existing_table_without_data_works,adding_a_unique_constraint_should_warn,dropping_enum_values_should_warn,adding_a_unique_constraint_when_existing_data_respects_it_works,making_an_optional_field_required_with_data_without_a_default_is_unexecutable,making_an_optional_field_required_with_data_with_a_default_works,making_an_optional_field_required_with_data_with_a_default_is_unexecutable,making_an_optional_field_required_on_an_empty_table_works,changing_a_column_from_optional_to_required_with_a_default_is_safe,altering_the_type_of_a_column_in_a_non_empty_table_warns,migrating_a_required_column_from_int_to_string_should_cast,changing_a_string_array_column_to_scalar_is_fine,changing_an_int_array_column_to_scalar_is_not_possible,int_to_string_conversions_work,string_to_int_conversions_are_risky,datetime_to_float_conversions_are_impossible,adding_a_model_for_an_existing_table_must_work,removing_a_model_for_a_table_that_is_already_deleted_must_work,creating_a_field_for_an_existing_column_with_a_compatible_type_must_work,creating_a_field_for_an_existing_column_and_changing_its_type_must_work,creating_a_field_for_an_existing_column_and_simultaneously_making_it_optional,creating_a_scalar_list_field_for_an_existing_table_must_work,delete_a_field_for_a_non_existent_column_must_work,deleting_a_scalar_list_field_for_a_non_existent_column_must_work,updating_a_field_for_a_non_existent_column,renaming_a_field_where_the_column_was_already_renamed_must_work,existing_enums_are_picked_up,connecting_to_a_postgres_database_with_missing_schema_creates_it,list_migration_directories_with_an_empty_migrations_folder_works,listing_a_single_migration_name_should_work,adding_a_scalar_field_must_work,adding_an_enum_field_must_work,adding_an_enum_field_must_work_with_native_types_off,json_fields_can_be_created,adding_an_optional_field_must_work,adding_an_id_field_with_a_special_name_must_work,adding_an_id_field_of_type_int_must_work,adding_an_id_field_of_type_int_must_work_for_sqlite,adding_an_id_field_of_type_int_with_autoincrement_works,making_an_existing_id_field_autoincrement_works,removing_autoincrement_from_an_existing_field_works,making_an_existing_id_field_autoincrement_works_with_indices,making_an_existing_id_field_autoincrement_works_with_foreign_keys,flipping_autoincrement_on_and_off_works,making_an_autoincrement_default_an_expression_then_autoincrement_again_works,removing_a_scalar_field_must_work,can_handle_reserved_sql_keywords_for_model_name,can_handle_reserved_sql_keywords_for_field_name,update_type_of_scalar_field_must_work,changing_the_type_of_an_id_field_must_work,changing_the_type_of_a_field_referenced_by_a_fk_must_work,updating_db_name_of_a_scalar_field_must_work,changing_a_relation_field_to_a_scalar_field_must_work,changing_a_scalar_field_to_a_relation_field_must_work,adding_a_new_unique_field_must_work,adding_new_fields_with_multi_column_unique_must_work,unique_in_conjunction_with_custom_column_name_must_work,multi_column_unique_in_conjunction_with_custom_column_name_must_work,removing_an_existing_unique_field_must_work,adding_unique_to_an_existing_field_must_work,removing_unique_from_an_existing_field_must_work,reserved_sql_key_words_must_work,migrations_with_many_to_many_related_models_must_not_recreate_indexes,removing_a_relation_field_must_work,simple_type_aliases_in_migrations_must_work,foreign_keys_of_inline_one_to_one_relations_have_a_unique_constraint,column_defaults_must_be_migrated,escaped_string_defaults_are_not_arbitrarily_migrated,created_at_does_not_get_arbitrarily_migrated,renaming_a_datasource_works,relations_can_reference_arbitrary_unique_fields,relations_can_reference_arbitrary_unique_fields_with_maps,relations_can_reference_multiple_fields,a_relation_with_mappings_on_both_sides_can_reference_multiple_fields,relations_with_mappings_on_referenced_side_can_reference_multiple_fields,relations_with_mappings_on_referencing_side_can_reference_multiple_fields,foreign_keys_are_added_on_existing_tables,foreign_keys_can_be_added_on_existing_columns,foreign_keys_can_be_dropped_on_existing_columns,basic_compound_primary_keys_must_work,compound_primary_keys_on_mapped_columns_must_work,references_to_models_with_compound_primary_keys_must_work,join_tables_between_models_with_compound_primary_keys_must_work,join_tables_between_models_with_mapped_compound_primary_keys_must_work,switching_databases_must_work,adding_mutual_references_on_existing_tables_works,schemas_with_dbgenerated_work,schemas_with_dbgenerated_expressions_work,models_with_an_autoincrement_field_as_part_of_a_multi_field_id_can_be_created,migrating_a_unique_constraint_to_a_primary_key_works,adding_multiple_optional_fields_to_an_existing_model_works,reordering_and_altering_models_at_the_same_time_works,changing_all_referenced_columns_of_foreign_key_works,a_table_recreation_with_noncastable_columns_should_trigger_warnings,a_model_can_be_removed,a_default_can_be_dropped,advisory_locking_works,datetime_defaults_work,function_expressions_as_dbgenerated_work,dev_diagnostic_on_an_empty_database_without_migration_returns_create_migration,dev_diagnostic_after_two_migrations_happy_path,dev_diagnostic_detects_drift,dev_diagnostic_calculates_drift_in_presence_of_failed_migrations,dev_diagnostic_returns_create_migration_when_the_database_is_behind,dev_diagnostic_can_detect_when_the_migrations_directory_is_behind,dev_diagnostic_can_detect_when_history_diverges,dev_diagnostic_can_detect_edited_migrations,dev_diagnostic_reports_migrations_failing_to_apply_cleanly,dev_diagnostic_with_a_nonexistent_migrations_directory_works,with_a_failed_migration,with_an_invalid_unapplied_migration_should_report_it,drift_can_be_detected_without_migrations_table,dev_diagnostic_shadow_database_creation_error_is_special_cased_mysql,dev_diagnostic_shadow_database_creation_error_is_special_cased_postgres,an_enum_can_be_turned_into_a_model,variants_can_be_added_to_an_existing_enum,variants_can_be_removed_from_an_existing_enum,models_with_enum_values_can_be_dropped,enum_field_to_string_field_works,string_field_to_enum_field_works,enums_used_in_default_can_be_changed,index_on_compound_relation_fields_must_work,index_settings_must_be_migrated,unique_directive_on_required_one_to_one_relation_creates_one_index,one_to_many_self_relations_do_not_create_a_unique_index,model_with_multiple_indexes_works,removing_multi_field_unique_index_must_work,index_renaming_must_work,index_renaming_must_work_when_renaming_to_default,index_renaming_must_work_when_renaming_to_custom,index_updates_with_rename_must_work,dropping_a_model_with_a_multi_field_unique_index_must_work,indexes_with_an_automatically_truncated_name_are_idempotent,new_index_with_same_name_as_index_from_dropped_table_works,database_level_json_defaults_can_be_defined,foreign_keys_to_indexes_being_renamed_must_work,mark_migration_applied_on_an_empty_database_works,mark_migration_applied_on_a_non_empty_database_works,mark_migration_applied_when_the_migration_is_already_applied_errors,mark_migration_applied_when_the_migration_is_failed,baselining_should_work,must_return_helpful_error_on_migration_not_found,mark_migration_rolled_back_on_an_empty_database_errors,mark_migration_rolled_back_on_a_database_with_migrations_table_errors,mark_migration_rolled_back_with_a_failed_migration_works,mark_migration_rolled_back_with_a_successful_migration_errors,rolling_back_applying_again_then_rolling_back_again_should_error,starting_a_migration_works,finishing_a_migration_works,updating_then_finishing_a_migration_works,multiple_successive_migrations_work,shared_default_constraints_are_ignored_issue_5423,indexes_on_foreign_key_fields_are_not_created_twice,enum_creation_is_idempotent,enums_work_when_table_name_is_remapped,arity_of_enum_columns_can_be_changed,arity_is_preserved_by_alter_enum,native_type_columns_can_be_created,default_current_timestamp_precision_follows_column_precision,enums_can_be_dropped_on_postgres,adding_a_scalar_list_for_a_model_with_id_type_int_must_work,existing_postgis_tables_must_not_be_migrated,native_type_columns_can_be_created,uuids_do_not_generate_drift_issue_5282,adding_a_many_to_many_relation_must_result_in_a_prisma_style_relation_table,adding_a_many_to_many_relation_with_custom_name_must_work,adding_an_inline_relation_must_result_in_a_foreign_key_in_the_model_table,specifying_a_db_name_for_an_inline_relation_must_work,adding_an_inline_relation_to_a_model_with_an_exotic_id_type,removing_an_inline_relation_must_work,compound_foreign_keys_should_work_in_correct_order,moving_an_inline_relation_to_the_other_side_must_work,reset_works,reset_then_apply_with_migrations_directory_works,reset_then_diagnostics_with_migrations_directory_works,shadow_db_url_can_be_configured_on_postgres,soft_resets_work_on_postgres,soft_resets_work_on_sql_server,soft_resets_work_on_mysql,creating_tables_without_primary_key_must_work,relations_to_models_without_a_primary_key_work,relations_to_models_with_no_pk_and_a_single_unique_required_field_work,enum_value_with_database_names_must_work,enum_defaults_must_work,id_as_part_of_relation_must_work,multi_field_id_as_part_of_relation_must_work,remapped_multi_field_id_as_part_of_relation_must_work,unique_constraints_on_composite_relation_fields,indexes_on_composite_relation_fields,dropping_mutually_referencing_tables_works,sqlite_must_recreate_indexes,sqlite_must_recreate_multi_field_indexes,creating_a_model_with_a_non_autoincrement_id_column_is_idempotent,squashing_whole_migration_history_works,squashing_migrations_history_at_the_start_works,squashing_migrations_history_at_the_end_works,bytes_columns_are_idempotent,float_columns_are_idempotent,decimal_columns_are_idempotent,float_to_decimal_works,decimal_to_float_works,bytes_to_string_works,string_to_bytes_works,decimal_to_decimal_array_works,bytes_to_bytes_array_works,adding_an_unsupported_type_must_work,switching_an_unsupported_type_to_supported_must_work,adding_and_removing_properties_on_unsupported_should_work,using_unsupported_and_ignore_should_work,typescript_starter_schema_is_idempotent_without_native_type_annotations,typescript_starter_schema_starting_without_native_types_is_idempotent,bigint_primary_keys_are_idempotent,safe_casts_with_existing_data_should_work,risky_casts_with_existing_data_should_warn,not_castable_with_existing_data_should_warn,typescript_starter_schema_with_native_types_is_idempotent,typescript_starter_schema_with_different_native_types_is_idempotent,safe_casts_with_existing_data_should_work,risky_casts_with_existing_data_should_warn,impossible_casts_with_existing_data_should_warn,typescript_starter_schema_with_native_types_is_idempotent,typescript_starter_schema_with_differnt_native_types_is_idempotent,safe_casts_with_existing_data_should_work,risky_casts_with_existing_data_should_warn,not_castable_with_existing_data_should_warn,safe_casts_from_array_with_existing_data_should_work,typescript_starter_schema_with_native_types_is_idempotent,typescript_starter_schema_with_differnt_native_types_is_idempotent,schema_push_happy_path,schema_push_warns_about_destructive_changes,schema_push_with_an_unexecutable_migration_returns_a_message_and_aborts,indexes_and_unique_constraints_on_the_same_field_do_not_collide,multi_column_indexes_and_unique_constraints_on_the_same_fields_do_not_collide
          NUM_SHARDS: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
          MYSQL_BIND_HOST: "0.0.0.0"
        options: --health-cmd="mysqladmin ping -h127.0.0.1 -P33577" --health-interval=5s --health-timeout=2s --health-retries=5

    runs-on: ubuntu-latest
    steps:
    
      - run: mysql -h 127.0.0.1 -P 33577 -u test -ptest -e "SHOW DATABASES;"
      
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.48.0
          default: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: migration-engine-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: timeout 40m cargo test mysql_5_6
        working-directory: migration-engine/migration-engine-tests
        env:
          CLICOLOR_FORCE: 1
