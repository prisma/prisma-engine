name: Migration Engine
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  test-linux:
    name: "Test ${{ matrix.database }} on Linux"
    
    strategy:
      fail-fast: false
      matrix:
        database:
          - mssql_2017
          - mssql_2019
          - mysql_5_6
          - mysql_5_7
          - mysql_8
          - mysql_mariadb
          - postgres9
          - postgres10
          - postgres11
          - postgres12
          - postgres13
          - sqlite
        
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Start ${{ matrix.database }}"
        run: make start-${{ matrix.database }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: migration-engine-${{ runner.os }}-cargo-${{ matrix.database }}-${{ hashFiles('**/Cargo.lock') }}

      - name: "Wait for database to get healthy"
        uses: juliangruber/sleep-action@v1
        with:
          time: 20s

      - run: timeout 40m cargo test ${{ matrix.database }}
        working-directory: migration-engine/migration-engine-tests
        env:
          CLICOLOR_FORCE: 1

  test-windows:
    strategy:
      fail-fast: false
      matrix:
        db:
          - mysql
          - mariadb
        rust:
          - stable
        os:
          - windows-latest

    runs-on: ${{ matrix.os }}

    name: "Test ${{ matrix.db }} on Windows"

    env:
      MYSQL_8_TEST_URL: "mysql://root@localhost:3306?connect_timeout=20&socket_timeout=60"
      MARIADB_TEST_URL: "mysql://root@localhost:3306?connect_timeout=20&socket_timeout=60"

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.rust}}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ matrix.db }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ${{ matrix.db }}
        run: choco install ${{ matrix.db }}

      - name: Run tests
        run: cargo test -p migration-engine-tests ${{ matrix.db == 'mysql' && 'mysql_8' || 'mariadb' }}
